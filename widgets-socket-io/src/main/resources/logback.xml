<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <contextName>live-gw-document</contextName>
    <!--日志路径-->
    <property name="LOG_PATH" value="/var/www/dream/tomcat"/>
    <!--设置系统日志目录-->
    <property name="APP_DIR" value="logs"/>

    <property name="APP_NAME" value="spruce"/>

    <!--彩色日志格式-->
    <property name="CONSOLE_LOG_PATTERN"
              value="[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] [%thread] [%c.%M:%L] - %msg%n"/>
    <!-- Console 输出设置 -->
    <!-- %m输出的信息,%p日志级别,%t线程名,%d日期,%c类的全名,%i索引【从数字0开始递增】,,, -->
    <!-- appender是configuration的子节点，是负责写日志的组件。 -->
    <!-- ConsoleAppender：把日志输出到控制台 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <!--<pattern>===%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>-->
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- 日志记录器，日期滚动记录 -->
    <appender name="FILE_INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${LOG_PATH}/${APP_DIR}/${APP_NAME}.log</file>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。
            而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
            <fileNamePattern>${LOG_PATH}/${APP_DIR}/info/log-${APP_NAME}-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>100</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <!-- 追加方式记录日志 -->
        <append>true</append>
        <!-- 日志文件的格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %level %logger Line:%-3L - %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <!--异步日志配置-->
    <appender name="ASYNC_FILE_INFO" class="ch.qos.logback.classic.AsyncAppender">
        <!--默认情况队列中剩余20%容量将丢弃TRACE,DEBUG,INFO级别日志,0标识不丢弃-->
        <discardingThreshold>0</discardingThreshold>
        <queueSize>1024</queueSize>
        <!--是否不阻塞,false标识阻塞-->
        <neverBlock>false</neverBlock>
        <includeCallerData>true</includeCallerData>
        <appender-ref ref="FILE_INFO"/>
    </appender>


    <!-- 改成debug可以看到socket.io的日志-->
    <root level="INFO">
        <appender-ref ref="ASYNC_FILE_INFO"/>
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>